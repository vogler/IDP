doctype 5
html(lang="en")
  head
    title= pageTitle
    link(href="css/default.css", rel="stylesheet")
    link(href="css/smoothness/jquery-ui-1.9.2.custom.min.css", rel="stylesheet")
    link(href="css/jquery.miniColors.css", rel="stylesheet")
    script(src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false")
    script(src="js/jquery-1.8.3.min.js")
    script(src="js/jquery-ui-1.9.2.custom.min.js")
    script(src="js/jquery.miniColors.min.js")
    script(src="js/sugar-1.3.6.min.js")
    script(src="js/sugar-locale-de.js")
    style
      .ui-widget {
        font-size: .8em;
      }
    script(type='text/javascript')
      $(document).ready(function() {
        var strokeColor = '#FF0000';
        var strokeWeight = 2;
        var myLatLng = new google.maps.LatLng(0, -180);
        var mapOptions = {
          zoom: 3,
          center: myLatLng,
          mapTypeId: google.maps.MapTypeId.TERRAIN
        };

        map = new google.maps.Map(document.getElementById('map_canvas'), mapOptions);

        var coordinates = [
            new google.maps.LatLng(37.772323, -122.214897),
            new google.maps.LatLng(21.291982, -157.821856),
            new google.maps.LatLng(-18.142599, 178.431),
            new google.maps.LatLng(-27.46758, 153.027892)
        ];
        path = new google.maps.Polyline({
          path: coordinates,
          strokeColor: strokeColor,
          strokeOpacity: 1.0,
          strokeWeight: strokeWeight,
        });

        path.setMap(map);

        // controls
        // style of accordion but more than one active panel possible
        //- $('#controls').addClass('ui-accordion ui-widget ui-helper-reset');
        $('#controls > h3').addClass('ui-accordion-header ui-helper-reset ui-state-default ui-corner-all')
          .css('padding', '.3em .7em').click(function(){$(this).next().slideToggle()})
          .first().css('margin-top', 0);
        $('#controls > div').addClass('ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom')
          .css('padding', '.7em');

        // submit forms on file select
        $(':file').change(function(){
          $(this).parents('form').submit();
        });

        // buttons
        $('button').button();
        $( "#btn_play" ).button({
          text: false,
          icons: { primary: "ui-icon-play" }
        })
        .click(function() {
          var status = $(this).text() === 'play' ? 'pause' : 'play';
          $(this).button("option", {label: status, icons: {primary: 'ui-icon-'+status}});
        });
        $( "#btn_stop" ).button({
            text: false,
            icons: { primary: "ui-icon-stop" }
        });
        anim_follow = true;
        $('#cb_follow').click(function(){
          anim_follow = !anim_follow;
        }).attr('checked', anim_follow).button({
          text: true, label: 'folgen',
          icons: { primary: 'ui-icon-arrow-4'}
        });

        // speed slider
        anim_speed = 20;
        $( "#speed_slider" ).slider({
          range: "min",
          min: 1,
          max: 100,
          value: anim_speed,
          slide: function( event, ui ) {
            $( "#speed" ).text( ui.value );
            anim_speed = ui.value;
            if(anim_playing){
              anim_pause();
              anim_play();
            }
          }
        });
        $( "#speed" ).text(anim_speed);

        // colorpicker
        $('#colorSelector').val(strokeColor).addClass('black').hide().miniColors({
          readonly: true, opacity: true, 
          change: function(hex, rgba){
            path.setOptions({strokeColor: hex, strokeOpacity: rgba.a});
          }
        });

        // stroke spinner
        $( "#stroke_spinner" ).val(strokeWeight).spinner({
          min: 0,
          max: 20,
          step: 0.1,
          numberFormat: 'n',
          spin: function( event, ui ) {
            path.setOptions({strokeWeight: ui.value});
          }
        });

      });


      function loadMap(file){
        anim_stop();
        //- '/map?file=' somehow breaks syntax highlighting for Jade
        $.getJSON('/map/' + file,
            {},
            function(json){
              var bounds = new google.maps.LatLngBounds();
              var coords = json.map(function(x){
                var ll = new google.maps.LatLng(x.lat,x.lon);
                bounds.extend(ll);
                return ll;
              });
              path.setPath(coords);
              map.fitBounds(bounds);
              $('#time_start').text(Date.create(json.first().time).long('de'));
              $('#time_end').text(Date.create(json.last().time).long('de'));
              $('#time_duration').text(
                Date.create(
                  Date.range(json.first().time, json.last().time).duration()
                ).addHours(-1).format('{24hr}:{mm}')
              );
            });
      }

      // animation
      var anim_playing = false;
      var anim_fullPath, anim_i;
      function anim_play(){
        if(!anim_playing) {
          if(!anim_i){
            anim_fullPath = path.getPath().getArray();
            anim_i = 1;
            anim_step();
          }
          anim_playing = setInterval('anim_step()', parseInt(5000/anim_speed));
        } else {
          anim_pause();
        }
      }
      function anim_step(){
        if(anim_i >= anim_fullPath.length) {
          anim_stop();
        }
        if(!anim_i) return;
        path.setPath(anim_fullPath.first(anim_i));
        if(anim_follow) map.setCenter(anim_fullPath[anim_i]);
        anim_i++;
      }
      function anim_pause(){
        clearInterval(anim_playing);
        anim_playing = false;
      }
      function anim_stop(){
        anim_pause();
        anim_i = 0;
        if(anim_fullPath) path.setPath(anim_fullPath);
        $( "#btn_play" ).button( "option", {
          label: "play",
          icons: { primary: "ui-icon-play" }
        });
      }

      // geocode
      var infowindow = new google.maps.InfoWindow();
      var marker;
      var geocoder = new google.maps.Geocoder();
      function geocode() {
        var latlng = path.getPath().getArray().first();
        geocoder.geocode({'latLng': latlng}, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
            if (results[1]) {
              map.setZoom(11);
              marker = new google.maps.Marker({
                  position: latlng,
                  map: map
              });
              infowindow.setContent(results[1].formatted_address);
              infowindow.open(map, marker);
            } else {
              alert('No results found');
            }
          } else {
            alert('Geocoder failed due to: ' + status);
          }
        });
      }
  body
    #layout
      img(src='images/layout.png', onclick="$('#layouts').toggle()")
      ul#layouts
        li(onclick="$('#controls').toggle()") Seitenleiste
        li(onclick="$('#infoTable').toggle()") Tabellen
        li(onclick="$('#files').toggle()") Dateiliste
    #controls.ui-accordion.ui-widget.ui-helper-reset
      h3 Upload
      div.ui-accordion-content.ui-helper-reset.ui-widget-content.ui-corner-bottom
        form(action="/upload", method="post", enctype="multipart/form-data")
          input#fileUpload(type='file', name='map')
      h3 Baustelle
      div
        button(onclick='geocode()') reverse geocode
        ul
          li Plaene
          li Gates
      h3 LKW
      div
      h3 Karte
      div
        | Start: 
        span#time_start
        br
        | Ende: 
        span#time_end
        br
        | Dauer: 
        span#time_duration
      h3 Filter
      div
        ul
          li Typ
          li Outliers
      h3 Animation
      div
        button#btn_play(onclick='anim_play()') play
        button#btn_stop(onclick='anim_stop()') stop
        input#cb_follow(type="checkbox")
        label(for="cb_follow") folgen
        br
        | Geschwindigkeit: 
        span#speed
        | x
        #speed_slider
      h3 Optionen
      div
        | Farbe: 
        input(type='text')#colorSelector
        |  St√§rke: 
        input(type='text')#stroke_spinner
        //- html5 number picker
        //- input(type="number", min="0", max="10", step=".1", value="1")
    #map_canvas
    table#infoTable
      thead
        tr
          th Truck
          th(colspan=2) Dumper 1
          th(colspan=2) Dumper 2
        tr
          th Segment
          th Gate 1 to 1
          th Gate 1 to 3
          th Gate 1 to 1
          th Gate 1 to 3
      tbody
        each s in [1,2,3,4]
          tr
            td Segment time #{s}
            td 2:30
            td 2:30
            td 2:30
            td 2:30
    #files
      each f in files
        a(href="javascript: loadMap('"+f+"')")= f
        br