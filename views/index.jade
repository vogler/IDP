doctype 5
html(lang="de")
  head
    title LogVis
    link(href="css/bootstrap.min.css", rel="stylesheet", media="screen")
    link(href="css/smoothness/jquery-ui-1.10.2.custom.min.css", rel="stylesheet")
    link(href="jquery.minicolors/jquery.minicolors.css", rel="stylesheet")
    link(href="jquery-file-upload/css/jquery.fileupload-ui.css", rel="stylesheet")
    script(src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=visualization")
    script(src="js/jquery-1.9.1.min.js")
    script(src="js/jquery-ui-1.10.2.custom.min.js")
    script(src="jquery.minicolors/jquery.minicolors.js")
    script(src="js/bootstrap.min.js")
    script(src="jquery-file-upload/js/vendor/jquery.ui.widget.js")
    script(src="jquery-file-upload/js/jquery.fileupload.js")
    script(src="js/sugar-1.3.9.min.js")
    script(src="js/sugar-locale-de.js")
    script(src="js/knockout-2.2.1.js")
    script(src="js/knockout.mapping-latest.js")
    script(src="js/routie.min.js")
    != css('index')
    != js('fixes')
    != js('index')
    script!= 'db_sites = ko.mapping.fromJS(' + JSON.stringify(sites) + ')'
    script!= 'db_trucks = ko.mapping.fromJS(' + JSON.stringify(trucks) + ')'
    script!= 'db_files = ko.mapping.fromJS(' + JSON.stringify(files) + ')'
    != js('models')
    != js('routes')
  body
    #layoutMenu.dropdown
      a.btn.btn-mini.dropdown-toggle(data-toggle="dropdown")
        b.caret
      ul.dropdown-menu
        li: a(onclick="$('#controls').toggle()") Seitenleiste
        li: a(onclick="$('#infoTable').toggle()") Tabellen
        li: a(onclick="$('#files').toggle()") Dateiliste

    #sites.modal.fade.hide
      .modal-header
        button.close(data-dismiss="modal", aria-hidden="true") x
        h3 Verwaltung
      .modal-body.span4
        ul.nav.nav-tabs
          li.active: a(href="#sitesTab", data-toggle="tab") Baustellen
          li: a(href="#trucksTab", data-toggle="tab") LKWs
        .tab-content
          #sitesTab.tab-pane.active
            h5(data-bind="visible: sites().length==0") Es wurden noch keine Baustellen angelegt!
            ul.unstyled(data-bind="foreach: {data: sites, as: 'site'}, visible: sites().length > 0")
              li
                span(data-bind="visible: !editing(), text: name, event: { dblclick: $parent.editItem }")
                input(data-bind="visible: editing(), value: name, hasfocus: editing(), valueUpdate: 'afterkeydown', enterKey: $parent.stopEditing, event: { blur: $parent.stopEditing }")
                a.pull-right(data-bind="click: $parent.removeItem"): i.icon-trash
                a.pull-right(data-bind="click: $parent.editItem"): i.icon-pencil
                ul(data-bind="foreach: site.tracks")
                  li
                    span(data-bind="text: file")
                    a.pull-right(data-bind="click: $root.removeTrack.bind($data, site)"): i.icon-trash
            form(data-bind="submit: addItem", onsubmit="$(this).find('input:first').focus()")
              .input-append
                input.span2(type='text', data-bind="value: newItem", placeholder='Name...', autofocus)
                //- a.btn(onclick="$(this).parents('form:first').submit()"): i.icon-plus
                input.btn(type='submit', value='hinzufügen')
          #trucksTab(data-bind="with: trucksViewModel").tab-pane
            h5(data-bind="visible: trucks().length==0") Es wurden noch keine LKW-Typen angelegt!
            ul.unstyled(data-bind="foreach: {data: trucks, as: 'truckType'}")
              li
                span(data-bind="text: name")
                span.muted(data-bind="text: ' ('+volume()+', '+speed()+')'")
                a.pull-right(data-bind="click: $parent.removeTruckType"): i.icon-trash
                ul(data-bind="foreach: truckType.list")
                  li
                    span(data-bind="text: name")
                    a.pull-right(data-bind="click: $parents[1].removeTruck.bind($data, truckType)"): i.icon-trash
            hr
            form(data-bind="submit: addTruckType")
              input(type='text', data-bind="value: newTruckType.name", placeholder='Name...')
              input(type='text', data-bind="value: newTruckType.volume", placeholder='Volumen...')
              input(type='text', data-bind="value: newTruckType.speed", placeholder='Geschwindigkeit...')
              input.btn(type='submit', value='hinzufügen')
            form(data-bind="submit: addTruck, visible: trucks().length")
              select.input-medium(data-bind="options: trucks, optionsText: 'name', value: newTruck.truckType, optionsCaption: 'auswählen...'")
              input(type='text', data-bind="value: newTruck.name", placeholder='Name...')
              input.btn(type='submit', value='hinzufügen')

    #uploads.modal.fade.hide
      .modal-header
        button.close(data-dismiss="modal", aria-hidden="true") x
        h3 Upload
      .modal-body.span4
        //- h5(data-bind="text: 'Baustelle: '+site.name()")
        table.table.table-condensed
          thead
            tr
              th Track
              th LKW
          tbody(data-bind="foreach: uploads")
            tr
              td(data-bind="text: $data.file")
              td
                select.input-medium.pull-right(data-bind="foreach: trucksViewModel.trucks, value: $data.truck, optionsCaption: 'auswählen...'")
                  optgroup(data-bind="attr: {label: name}, foreach: list")
                    option(data-bind="text: name, value: {_id: $parent._id(), name: name()}")
        h5(data-bind="ifnot: trucksViewModel.trucks().length") Es müssen erst LKWs angelegt werden bevor die Dateien hochgeladen werden können!
        input.btn.btn-primary.pull-right(data-bind="visible: trucksViewModel.trucks().length>0 && uploads().length, css: {disabled: uploading}, click: upload", value='hochladen')

    #controls.pull-right.ui-accordion.ui-widget.ui-helper-reset
      h3 Baustelle
      div.ui-accordion-content.ui-helper-reset.ui-widget-content.ui-corner-bottom
        .form-inline
          select.input-medium(data-bind="options: sites, optionsText: 'name', value: site, optionsCaption: 'auswählen...', event: { change: changedSite}")
          a.btn(data-target='#sites', data-toggle='modal'): i.icon-cog
        div(data-bind="visible: site")
          span.btn.fileinput-button
            i.icon-folder-open
            |  Karten hochladen
            input(type='file', name='map', data-url="/upload", multiple)
          ul.unstyled.inline
            li 
              a.btn.btn-mini#btn_gate(rel="tooltip", title="Zwei mal auf Karte klicken um Linie zu erstellen"): i.icon-plus
              |  Gates
      h3(data-bind="visible: site")
        | Gates 
        i.icon-info-sign(rel="tooltip", title="Klick auf Gate mit links de-/aktiviert es. Klick mit rechts löscht es.")
      #gates(data-bind="visible: site")
        // ko if: site
        div(data-bind="foreach: site().gates")
          a.btn.active(
            data-bind="text: markers[i()].title, attr: {i: i()}, css: {disabled: stats.intersectedGatesOrg().indexOf(i())==-1}"
            onclick="if(!$(this).hasClass('disabled')){ $(this).button('toggle'); drawGates(); reloadStats(); }")
        // /ko
      h3(data-bind="visible: loadedMap") Track
      div(data-bind="visible: loadedMap")
        | Datum: 
        small#time_date
        br
        | Start: 
        small#time_start
        |  | Ende: 
        small#time_end
        br
        | Dauer: 
        small#time_duration
        br
        | LKW: 
        small(data-bind="text: truck.name()+' ('+truck.driver()+')'")
        br
        //- a.btn.btn-small(onclick='geocode()')
        //-   i.icon-flag
        //-   |  reverse geocode
        //- br
        a.btn.btn-small(data-bind="attr: {href: '/map/'+loadedMap()}", rel="tooltip", title="Alle Daten als JSON anzeigen")
          i.icon-file
          | JSON
        a.btn.btn-small(onclick="downloadCSV()", rel="tooltip", title="Auswertung als CSV herunterladen")
          i.icon-file
          | CSV
      h3 Animation
      div
        a.btn#btn_play: i.icon-play
        a.btn(onclick='anim_stop()'): i.icon-stop
        a.btn.active(onclick='anim.follow = !anim.follow', data-toggle="button")
          i.icon-move
          |  folgen
        br
        | Geschwindigkeit: 
        span#speed
        | x
        #speed_slider
      h3 Optionen
      div
        | Farbe: 
        input(type='text')#colorSelector
        |  Stärke: 
        input(type='text')#stroke_spinner
        //- html5 number picker
        //- input(type="number", min="0", max="10", step=".1", value="1")
        .btn-group
          a.btn.active(onclick='toggleLine()', data-toggle="button") Linie
          a.btn.active(onclick='toggleMarkers()', data-toggle="button") Marker
          a.btn(onclick='toggleHeatmap()', data-toggle="button") Heatmap
        div
          label.checkbox.pull-left
            input#tooltips(type="checkbox", checked, onclick='tooltips()')
            | Tooltips &nbsp;
          i.icon-eye-open(onmouseover="tooltips('show')", onmouseout="tooltips('hide')")

    #map_canvas

    #anim_timeline.hide
      #anim_time
        | 0:00
      #anim_slider_container
        #anim_slider

    #infoTable.span7: table.table.table-condensed(data-bind="visible: loadedMap() && stats.table().length")
      thead
        tr
          th Gates
          // ko foreach: stats.info 
          th(style="white-space: nowrap", data-bind="text: markers[from()].title+' zu '+markers[to()].title")
          // /ko 
      tbody(data-bind="foreach: {data: stats.table, as: 'row'}")
        tr(data-bind="foreach: row")
          td(style="white-space: nowrap", data-bind="html: formatRowContent($data, $index(), row[0])")

    #files.pull-right(data-bind="if: site")
      span(data-bind="visible: !site() || site().tracks().length==0") Es sind noch keine Karten vorhanden
      ul.unstyled(data-bind="foreach: {data: site().tracks, afterAdd: fadeIn}")
        li
          label.checkbox.inline
            input(type="checkbox", data-bind="attr: {checked: file()==loadedMap()}")
            a(data-bind="text: file, attr: {href: '#map/'+file()}")


    if node_env=="development"
      // livereload snippet
      script
        document.write('<script src="http://'
         + (location.host || 'localhost').split(':')[0]
         + ':35729/livereload.js?snipver=1"><\/script>')